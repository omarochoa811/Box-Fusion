<?xml version="1.0" encoding="UTF-8" standalone="no"?><CFG><Node><Name>2</Name><Line>15</Line></Node><Node><Name>3</Name><Line>16</Line></Node><Node><Name>4</Name><Line>START</Line></Node><Node><Name>5</Name><Line>EXIT</Line></Node><Edge><Source>4</Source><Target>2</Target><Boolean/><ID><Val>25@94</Val><Val>26@95</Val><Val>27@99</Val><Val>29@89</Val><Val>30@75</Val></ID></Edge><Edge><Source>2</Source><Target>3</Target><Boolean/><ID><Val>25@95</Val><Val>26@96</Val><Val>27@100</Val><Val>29@90</Val><Val>30@76</Val></ID></Edge><Edge><Source>3</Source><Target>5</Target><Boolean/><ID><Val>25@96</Val><Val>26@97</Val><Val>27@101</Val><Val>29@91</Val><Val>30@77</Val></ID></Edge><Origin><Val>SimpleLTL_Generator.generateAbsenceBetweenLandR:25@93</Val><Val>SimpleLTL_Generator.generateExistenceBetweenLandR:26@94</Val><Val>SimpleLTL_Generator.generatePrecedenceBetweenLandR:27@98</Val><Val>SimpleLTL_Generator.generateStrictPrecedenceBetweenLandR:29@88</Val><Val>SimpleLTL_Generator.generateUniversalityBetweenLandR:30@74</Val></Origin></CFG>